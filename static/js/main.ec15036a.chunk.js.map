{"version":3,"sources":["components/Header.js","components/Jumbo.js","components/Container.js","pages/Home.js","pages/Docs.js","index.js"],"names":["StyledNavbar","styled","scrolled","props","Navbar","Div","div","TreeFillIcon","StyledNavLink","Header","useState","setScrolled","handleScroll","window","pageYOffset","useEffect","addEventListener","removeEventListener","Nav","exact","to","Article","article","image","H1","h1","P","p","StyledLink","Link","jump","keyframes","ArrowDownIcon","ArrowDown","title","subtitle","link","linkText","className","MyContainer","backgroundColor","Content","Container","color","children","Home","Jumbo","Button","variant","Docs","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec15036a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { TreeFill } from \"react-bootstrap-icons\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledNavbar = styled(({ scrolled, ...props }) => <Navbar {...props} />)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  padding: 0 1.5rem;\n  background: ${({ scrolled }) => (scrolled ? \"white\" : \"transparent\")};\n  box-shadow: ${({ scrolled }) => (scrolled ? \"0 0 4px black\" : \"none\")};\n`;\n\nconst Div = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  height: 60px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst TreeFillIcon = styled(({ scrolled, ...props }) => (\n  <TreeFill {...props} />\n))`\n  width: 28px;\n  height: 28px;\n  color: ${({ scrolled }) => (scrolled ? \"black\" : \"white\")};\n`;\n\nconst StyledNavLink = styled(({ scrolled, ...props }) => (\n  <NavLink {...props} />\n))`\n  margin-left: 1rem;\n  padding: 0.4rem 0;\n  font-weight: bold;\n  text-shadow: ${({ scrolled }) =>\n    scrolled ? \"none\" : \"0 0 6px rgb(0, 0, 0, 0.4)\"};\n  border-radius: 20px;\n  color: ${({ scrolled }) => (scrolled ? \"black\" : \"white\")};\n\n  &:hover {\n    text-decoration: none;\n    color: ${({ scrolled }) => (scrolled ? \"black\" : \"white\")};\n  }\n\n  &.active {\n    padding: 0.4rem 1rem;\n    text-decoration: none;\n    text-shadow: none;\n    background: ${({ scrolled }) => (scrolled ? \"black\" : \"white\")};\n    color: ${({ scrolled }) => (scrolled ? \"white\" : \"black\")};\n  }\n`;\n\nconst Header = () => {\n  const [scrolled, setScrolled] = useState(false);\n\n  const handleScroll = () => {\n    if (window.pageYOffset > 50) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <StyledNavbar scrolled={scrolled}>\n      <Div>\n        <TreeFillIcon scrolled={scrolled} />\n        <Nav>\n          <StyledNavLink exact to=\"/\" scrolled={scrolled}>\n            Home\n          </StyledNavLink>\n          <StyledNavLink exact to=\"/docs\" scrolled={scrolled}>\n            Docs\n          </StyledNavLink>\n        </Nav>\n      </Div>\n    </StyledNavbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { ArrowDown } from \"react-bootstrap-icons\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Article = styled.article`\n  width: 100%;\n  height: 100vh;\n  padding: 1rem 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: no-repeat center center / cover;\n  background-image: url(${({ image }) => image});\n  overflow: hidden;\n`;\n\nconst Div = styled.div`\n  width: 100%;\n  max-width: 1000px;\n`;\n\nconst H1 = styled.h1`\n  font-size: 35px;\n  font-weight: bold;\n  text-shadow: 0 0 6px rgb(0, 0, 0, 0.4);\n  color: white;\n\n  @media (min-width: 375px) {\n    font-size: 40px;\n  }\n\n  @media (min-width: 414px) {\n    font-size: 45px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 55px;\n  }\n`;\n\nconst P = styled.p`\n  font-size: 16px;\n  text-shadow: 0 0 6px rgb(0, 0, 0, 0.4);\n  color: white;\n\n  @media (min-width: 375px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 414px) {\n    font-size: 24px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  box-shadow: 0 0 6px rgb(0, 0, 0, 0.4);\n`;\n\nconst jump = keyframes`\n    0% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-20px);\n    }\n    100% {\n      transform: translateY(0);\n    }\n`;\n\nconst ArrowDownIcon = styled(ArrowDown)`\n  position: absolute;\n  bottom: 2rem;\n  width: 40px;\n  height: 40px;\n  padding: 6px;\n  border-radius: 100%;\n  border: 2px solid white;\n  background: rgb(0, 0, 0, 0.5);\n  color: white;\n  animation: ${jump} 2s linear infinite;\n`;\n\nconst Header = ({ image, title, subtitle, link, linkText }) => (\n  <Article image={image}>\n    <Div>\n      <H1>{title}</H1>\n      <P>{subtitle}</P>\n      {link && (\n        <StyledLink to={link} className=\"btn btn-warning\">\n          {linkText}\n        </StyledLink>\n      )}\n    </Div>\n    <ArrowDownIcon />\n  </Article>\n);\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MyContainer = styled.div`\n  padding: 2rem 1.5rem;\n  background: ${({ backgroundColor }) => backgroundColor};\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  margin: auto;\n`;\n\nconst Container = ({ color, children }) => {\n  return (\n    <MyContainer backgroundColor={color}>\n      <Content>{children}</Content>\n    </MyContainer>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Header from \"../components/Header\";\nimport Jumbo from \"../components/Jumbo\";\nimport Container from \"../components/Container\";\n\nconst Home = () => (\n  <>\n    <Header />\n    <Jumbo\n      image=\"img/wald-im-herbst.jpg\"\n      title=\"Forest Adventures\"\n      subtitle=\"Modul 152, Raphael Suter\"\n      link=\"/docs\"\n      linkText=\"Dokumentation\"\n    />\n    <Container color=\"#ffc107\">\n      <h1>Forest Adventures</h1>\n      <p>Modul 152, Raphael Suter</p>\n      <Button variant=\"outline-light\">Dokumentation</Button>\n    </Container>\n  </>\n);\n\nexport default Home;\n","import React from \"react\";\nimport Jumbo from \"../components/Jumbo\";\nimport Header from \"../components/Header\";\n\nconst Docs = () => (\n  <>\n    <Header />\n    <Jumbo\n      image=\"img/785471584-fruehlingslicht-im-wald-2uOMxFGQ4pea.jpg\"\n      title=\"Dokumentation\"\n      subtitle=\"Modul 152, Raphael Suter\"\n    />\n  </>\n);\n\nexport default Docs;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./pages/Home\";\nimport Docs from \"./pages/Docs\";\n\nconst App = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/docs\" component={Docs} />\n    </Switch>\n  </BrowserRouter>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}